{"ast":null,"code":"var _jsxFileName = \"/home/akash/myReact/react-tetris/src/components/Tetris.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { checkCollision, createStage } from '../gameHelpers';\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\n\n//Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tetris = () => {\n  _s();\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n  console.log('re-renders');\n  const movePlayer = dir => {\n    console.log(\"Check Collision\", checkCollision(player, stage, {\n      x: dir,\n      y: 0\n    }));\n    if (!checkCollision(player, stage, {\n      x: dir,\n      y: 0\n    })) {\n      updatePlayerPos({\n        x: dir,\n        y: 0\n      });\n    }\n  };\n  const startGame = () => {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n  };\n  const drop = () => {\n    console.log(player.pos.y);\n\n    // Increase level when player has cleared 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1);\n      // Also increase speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n    if (!checkCollision(player, stage, {\n      x: 0,\n      y: 1\n    })) {\n      updatePlayerPos({\n        x: 0,\n        y: 1,\n        collided: false\n      });\n    } else {\n      // Game Over\n      console.log(\"Game Over\", player.pos.y);\n      if (player.pos.y < 1) {\n        console.log(\"GAME OVER!!!\");\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({\n        x: 0,\n        y: 0,\n        collided: true\n      });\n    }\n  };\n  const keyUp = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        console.log(\"interval on\");\n        setDropTime(1000 / (level + 1) + 200);\n      }\n    }\n  };\n  const dropPlayer = () => {\n    console.log(\"interval off\");\n    setDropTime(null);\n    drop();\n  };\n  const move = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n  useInterval(() => {\n    drop();\n  }, dropTime);\n  return /*#__PURE__*/_jsxDEV(StyledTetrisWrapper, {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => move(e),\n    onKeyUp: keyUp,\n    children: /*#__PURE__*/_jsxDEV(StyledTetris, {\n      children: [/*#__PURE__*/_jsxDEV(Stage, {\n        stage: stage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [gameOver ? /*#__PURE__*/_jsxDEV(Display, {\n          gameOver: gameOver,\n          text: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Display, {\n            text: `Score: ${score}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: `Rows: ${rows}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: `Levels: ${level}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(StartButton, {\n          callback: startGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(Tetris, \"4dLMhk0GWFQnd5Q+HqmTKcv5jRk=\", false, function () {\n  return [usePlayer, useStage, useGameStatus, useInterval];\n});\n_c = Tetris;\nexport default Tetris;\nvar _c;\n$RefreshReg$(_c, \"Tetris\");","map":{"version":3,"names":["React","useState","checkCollision","createStage","StyledTetrisWrapper","StyledTetris","useInterval","usePlayer","useStage","useGameStatus","Stage","Display","StartButton","jsxDEV","_jsxDEV","Tetris","_s","dropTime","setDropTime","gameOver","setGameOver","player","updatePlayerPos","resetPlayer","playerRotate","stage","setStage","rowsCleared","score","setScore","rows","setRows","level","setLevel","console","log","movePlayer","dir","x","y","startGame","drop","pos","prev","collided","keyUp","keyCode","dropPlayer","move","role","tabIndex","onKeyDown","e","onKeyUp","children","fileName","_jsxFileName","lineNumber","columnNumber","text","callback","_c","$RefreshReg$"],"sources":["/home/akash/myReact/react-tetris/src/components/Tetris.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { checkCollision, createStage } from '../gameHelpers';\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\n\n//Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n\n    console.log('re-renders');\n\n    const movePlayer = dir => {\n        console.log(\"Check Collision\",checkCollision(player, stage, { x:dir, y: 0}))\n        if (!checkCollision(player, stage, { x:dir, y: 0})) {\n            updatePlayerPos({ x: dir, y: 0});\n\n        }\n    }\n\n    const startGame = () => {\n        // Reset everything\n        setStage(createStage());\n        setDropTime(1000);\n        resetPlayer();\n        setGameOver(false);\n        setScore(0);\n        setRows(0);\n        setLevel(0);\n    }\n\n    const drop = () => {\n        console.log(player.pos.y)\n\n        // Increase level when player has cleared 10 rows\n        if (rows > (level + 1) * 10){\n            setLevel(prev => prev +1);\n            // Also increase speed\n            setDropTime(1000 / (level + 1) + 200);\n        }\n\n        if (!checkCollision(player, stage, { x: 0, y: 1 })){\n            updatePlayerPos({ x: 0, y: 1, collided: false })\n        } else {\n            // Game Over\n            console.log(\"Game Over\",player.pos.y)\n            if (player.pos.y < 1) {\n                console.log(\"GAME OVER!!!\")\n                setGameOver(true);\n                setDropTime(null);\n            }\n            updatePlayerPos({ x: 0, y: 0, collided: true })\n        }\n    }\n\n    const keyUp =({ keyCode }) => {\n        if (!gameOver) {\n            if (keyCode === 40) {\n                console.log(\"interval on\")\n                setDropTime(1000 / (level + 1) + 200);\n            }\n        }\n    }\n    const dropPlayer = () => {\n        console.log(\"interval off\")\n        setDropTime(null);\n        drop();\n    }\n\n    const move = ({ keyCode }) => {\n        if (!gameOver) {\n            if (keyCode === 37) {\n                movePlayer(-1);\n            } else if (keyCode === 39) {\n                movePlayer(1);\n            } else if (keyCode === 40) {\n                dropPlayer();\n            } else if (keyCode === 38) {\n                playerRotate(stage, 1);\n            }\n        }\n    }\n\n    useInterval(() => {\n        drop();\n    }, dropTime)\n    return (\n        <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)} onKeyUp={keyUp}>\n            <StyledTetris>\n            <Stage stage={ stage } />\n                <aside>\n                    {gameOver ? (\n                        <Display gameOver={gameOver} text=\"Game Over\" />\n                    ) : (\n                        <div>\n                            <Display text= {`Score: ${score}` } />\n                            <Display text= {`Rows: ${rows}` } />\n                            <Display text= {`Levels: ${level}` } />\n                        </div>\n                    )}\n                \n                <StartButton callback={startGame}/>\n                </aside>\n            </StyledTetris>\n        </StyledTetrisWrapper>\n    );\n};\n\nexport default Tetris;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}