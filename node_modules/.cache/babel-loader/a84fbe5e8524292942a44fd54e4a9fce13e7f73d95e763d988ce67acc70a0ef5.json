{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport { randomTetromino } from \"../tetrominos\";\nexport const usePlayer = () => {\n  _s();\n  const [player, setPlayer] = useState({\n    pos: {\n      x: 0,\n      y: 0\n    },\n    tetromino: randomTetromino().shape,\n    collided: false\n  });\n  const updatePlayerPos = ({\n    x,\n    y,\n    collided\n  }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: {\n        x: prev.pos.x += x,\n        y: prev.pos.y += y\n      },\n      collided\n    }));\n  };\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: {\n        x: STAGE_WIDTH / 2 - 2,\n        Y: 0\n      },\n      tetromino: randomTetromino().shape,\n      collided: false\n    });\n  }, []);\n  return [player, updatePlayerPos, resetPlayer];\n};\n_s(usePlayer, \"XYVnsHVbD+ZuuAv9gXLq6uQcr5g=\");","map":{"version":3,"names":["useState","useCallback","randomTetromino","usePlayer","_s","player","setPlayer","pos","x","y","tetromino","shape","collided","updatePlayerPos","prev","resetPlayer","STAGE_WIDTH","Y"],"sources":["/home/akash/myReact/react-tetris/src/hooks/usePlayer.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\nimport { randomTetromino } from \"../tetrominos\";\n\nexport const usePlayer = () => {\n        const [player, setPlayer] = useState({\n            pos: { x:0, y: 0 },\n            tetromino: randomTetromino().shape,\n            collided: false,\n        });\n\n        const updatePlayerPos = ({ x, y, collided }) => {\n            setPlayer(prev => ({\n                ...prev,\n                pos: { x: (prev.pos.x += x), y: (prev.pos.y += y)},\n                collided,\n            }))\n        }\n\n        const resetPlayer = useCallback(() => {\n            setPlayer({\n                pos: { x: STAGE_WIDTH / 2 -2, Y: 0 },\n                tetromino: randomTetromino().shape,\n                collided: false,\n            })\n        }, [])\n\nreturn [player, updatePlayerPos, resetPlayer];\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,eAAe,QAAQ,eAAe;AAE/C,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC;IACjCO,GAAG,EAAE;MAAEC,CAAC,EAAC,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAClBC,SAAS,EAAER,eAAe,CAAC,CAAC,CAACS,KAAK;IAClCC,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAGA,CAAC;IAAEL,CAAC;IAAEC,CAAC;IAAEG;EAAS,CAAC,KAAK;IAC5CN,SAAS,CAACQ,IAAI,KAAK;MACf,GAAGA,IAAI;MACPP,GAAG,EAAE;QAAEC,CAAC,EAAGM,IAAI,CAACP,GAAG,CAACC,CAAC,IAAIA,CAAE;QAAEC,CAAC,EAAGK,IAAI,CAACP,GAAG,CAACE,CAAC,IAAIA;MAAE,CAAC;MAClDG;IACJ,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMG,WAAW,GAAGd,WAAW,CAAC,MAAM;IAClCK,SAAS,CAAC;MACNC,GAAG,EAAE;QAAEC,CAAC,EAAEQ,WAAW,GAAG,CAAC,GAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAC;MACpCP,SAAS,EAAER,eAAe,CAAC,CAAC,CAACS,KAAK;MAClCC,QAAQ,EAAE;IACd,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEd,OAAO,CAACP,MAAM,EAAEQ,eAAe,EAAEE,WAAW,CAAC;AAC7C,CAAC;AAAAX,EAAA,CAxBYD,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}