{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { createStage } from \"../gameHelpers\";\nexport const useStage = (player, resetPlayer) => {\n  _s();\n  const [stage, setStage] = useState(createStage());\n  useEffect(() => {\n    const updateStage = prevStage => {\n      // First flush the stage\n      const newStage = prevStage.map(row => row.map(cell => cell[1] === 'clear' ? [0, 'clear'] : cell));\n\n      // Then draw the tetromino\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.Y][x + player.pos.x] = [value, `${player.collided ? 'merged' : 'clear'}`];\n          }\n        });\n      });\n      return newStage;\n    };\n    setStage(prev => updateStage(prev));\n  }, [player]);\n  return [stage, setStage];\n};\n_s(useStage, \"5P+otx0I7S1W+XNBDZZ95jKxV+k=\");","map":{"version":3,"names":["useState","useEffect","createStage","useStage","player","resetPlayer","_s","stage","setStage","updateStage","prevStage","newStage","map","row","cell","tetromino","forEach","y","value","x","pos","Y","collided","prev"],"sources":["/home/akash/myReact/react-tetris/src/hooks/useStage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { createStage } from \"../gameHelpers\";\n\nexport const useStage = (player, resetPlayer) => {\n    const [stage, setStage] = useState(createStage());\n\n    useEffect(() => {\n        const updateStage = prevStage => {\n            // First flush the stage\n            const newStage = prevStage.map(row =>\n                row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\n            );\n\n        // Then draw the tetromino\n        player.tetromino.forEach((row, y) => {\n            row.forEach((value, x) => {\n                if (value !== 0) {\n                newStage[y + player.pos.Y][x + player.pos.x] = [\n                    value,\n                    `${player.collided ? 'merged' : 'clear'}`,\n                ];\n            }\n            });\n        });\n        return newStage;\n    };\n    \n    setStage(prev => updateStage(prev));\n}, [player]);\n\n    return [stage, setStage];\n};\n\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,OAAO,MAAMC,QAAQ,GAAGA,CAACC,MAAM,EAAEC,WAAW,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACE,WAAW,CAAC,CAAC,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACZ,MAAMQ,WAAW,GAAGC,SAAS,IAAI;MAC7B;MACA,MAAMC,QAAQ,GAAGD,SAAS,CAACE,GAAG,CAACC,GAAG,IAC9BA,GAAG,CAACD,GAAG,CAACE,IAAI,IAAKA,IAAI,CAAC,CAAC,CAAC,KAAK,OAAO,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,GAAGA,IAAK,CAC/D,CAAC;;MAEL;MACAV,MAAM,CAACW,SAAS,CAACC,OAAO,CAAC,CAACH,GAAG,EAAEI,CAAC,KAAK;QACjCJ,GAAG,CAACG,OAAO,CAAC,CAACE,KAAK,EAAEC,CAAC,KAAK;UACtB,IAAID,KAAK,KAAK,CAAC,EAAE;YACjBP,QAAQ,CAACM,CAAC,GAAGb,MAAM,CAACgB,GAAG,CAACC,CAAC,CAAC,CAACF,CAAC,GAAGf,MAAM,CAACgB,GAAG,CAACD,CAAC,CAAC,GAAG,CAC3CD,KAAK,EACJ,GAAEd,MAAM,CAACkB,QAAQ,GAAG,QAAQ,GAAG,OAAQ,EAAC,CAC5C;UACL;QACA,CAAC,CAAC;MACN,CAAC,CAAC;MACF,OAAOX,QAAQ;IACnB,CAAC;IAEDH,QAAQ,CAACe,IAAI,IAAId,WAAW,CAACc,IAAI,CAAC,CAAC;EACvC,CAAC,EAAE,CAACnB,MAAM,CAAC,CAAC;EAER,OAAO,CAACG,KAAK,EAAEC,QAAQ,CAAC;AAC5B,CAAC;AAACF,EAAA,CA5BWH,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}